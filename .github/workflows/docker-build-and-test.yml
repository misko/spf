name: Build, Deploy and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: csmisko/ardupilotspf:latest
    runs-on: self-hosted
  pytest:
    needs: build
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    #- name: Install system depdendencies
    #  run: |
    #    sudo apt-get install -y git screen libiio-dev libiio-utils vim python3-dev uhubctl libusb-dev libusb-1.0-0-dev
    - name: Install dependencies (pip)
      run: |
        python3 -m pip install --upgrade pip
        pip3 install flake8 pytest
        pip3 install -e . 
        # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install bladeRF
      run: |
        TEMP_DIR="$(mktemp -d)"
        echo "Cloning bladeRF into: $TEMP_DIR"
        pushd ${TEMP_DIR}
        # sudo apt-get update
        # sudo apt-get install -y cmake python3-pip libusb-1.0-0
        git clone --depth 1 https://github.com/Nuand/bladeRF.git
        # cd bladeRF/host
        # mkdir build && cd build
        # cmake ..
        # make
        # sudo make install
        # sudo ldconfig
        cd bladeRF/host/libraries/libbladeRF_bindings/python
        python3 setup.py install
        popd
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        python3 -m pytest
